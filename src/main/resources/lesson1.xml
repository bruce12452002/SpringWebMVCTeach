<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

<!--    <context:component-scan base-package="home.bruce"/>-->

    <!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />-->

    <!-- spring mvc 設定靜態資源，方法一，mapping 為映射路徑，location 為真實路徑 -->
    <!-- 這種方法有虛擬路徑 mapping 可以設定 -->
    <!--    <mvc:resources mapping="/img/*" location="/image/" />-->
    <!--    <mvc:resources mapping="/css/*" location="/css/" />-->
    <!--    <mvc:resources mapping="/html/*" location="/html/" />-->

    <!-- spring mvc 設定靜態資源，方法二，註冊 DefaultServletHttpRequestHandler 處理器 -->
    <!--    <mvc:default-servlet-handler />-->

    <!--    靜態資源設定後，原本的 @RequestMapping 就失效了-->
    <!--    因為 spring-webmvc/META-INF/spring.handlers，兩種靜態裡的 parse 方法都會註冊 HandlerMapping-->
    <!--    new RootBeanDefinition(SimpleUrlHandlerMapping.class);-->
    <!--    而 DispatcherServlet.properties 裡，預設的都不會加載了，所以 @RequestMapping 不解析了，就會 404-->
    <!--    解決方法是在注入 RequestMappingHandlerMapping 就可以了-->


    <!--    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">-->
    <!--        <property name="messageConverters">-->
    <!--            <list>-->
    <!--                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>-->
    <!--            </list>-->
    <!--        </property>-->
    <!--    </bean>-->

    <!-- 可幫我們註冊 RequestMappingHandlerMapping
         註冊 RequestMappingHandlerAdapter 並使用 json
         日期轉換 -->
    <mvc:annotation-driven/>

    <!-- 必需有 commons-fileupload -->
    <!-- 底層用的 id 是 multipartResolver，所以不能改 -->
<!--    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">-->
<!--        <property name="defaultEncoding" value="UTF-8"/>-->
<!--        &lt;!&ndash; 以下單位為 Byte &ndash;&gt;-->
<!--        <property name="maxUploadSize" value="2048"/>-->
<!--        <property name="maxUploadSizePerFile" value="1024"/>-->
<!--        <property name="maxInMemorySize" value="2048"/> &lt;!&ndash; 緩衝區大小&ndash;&gt;-->
<!--    </bean>-->

    <!--    <bean id="convertService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">-->
    <!--        <property name="converters">-->
    <!--            <list>-->
    <!--                <bean class="home.bruce.util.DateConverter" />-->
    <!--                <bean class="home.bruce.util.LocalDateConverter" />-->
    <!--            </list>-->
    <!--        </property>-->
    <!--    </bean>-->

    <!--    <mvc:annotation-driven conversion-service="convertService" />-->

<!--    <mvc:interceptors>-->
        <!-- 可設定多個攔截器 -->
        <!-- i1 i2 i3 都是攔截器，且順序由上往下寫且 preHandle 都回傳是 true 時，觸發情形如下：
        i1.preHandle -> i2.preHandle -> i3.preHandle -> @RequestMapping 方法 ->
        i3.postHandle -> i2.postHandle -> i1.postHandle ->
        i3.afterCompletion -> i2.afterCompletion -> i1.afterCompletion

        如果，preHandle 其中一個回傳 false 時，@RequestMapping 方法 將不執行，假設是 i3.preHandle 回傳 false，觸發情形如下：
        i1.preHandle -> i2.preHandle -> i3.preHandle ->
        i2.afterCompletion -> i1.afterCompletion
        -->
<!--        <mvc:interceptor>-->
<!--            <mvc:mapping path="/**"/> &lt;!&ndash; 全部攔截 &ndash;&gt;-->
<!--            <bean class="home.bruce.interceptor.MyInterceptor"/>-->
<!--        </mvc:interceptor>-->
        <!-- 多個欄截器有順序-->
        <!--        <mvc:interceptor>-->
        <!--            <mvc:mapping path="/**"/>-->
        <!--            <bean class="home.bruce.interceptor.MyInterceptor2" />-->
        <!--        </mvc:interceptor>-->
<!--    </mvc:interceptors>-->
</beans>